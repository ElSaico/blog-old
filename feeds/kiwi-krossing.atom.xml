<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lines About Code</title><link href="http://uberwald-dev.net/" rel="alternate"></link><link href="http://uberwald-dev.net/feeds/kiwi-krossing.atom.xml" rel="self"></link><id>http://uberwald-dev.net/</id><updated>2014-08-06T14:40:46-03:00</updated><entry><title>Automation Track Builder</title><link href="http://uberwald-dev.net/2014-08-06-automation-track-builder.html" rel="alternate"></link><updated>2014-08-06T14:40:46-03:00</updated><author><name>Bruno Marques</name></author><id>tag:uberwald-dev.net,2014-08-06:2014-08-06-automation-track-builder.html</id><summary type="html">&lt;p&gt;Time to talk about the first (and so far only) open-source project that I created
and maintain consistently (yes, Kiwi Krossing is on hiatus - shame on me!) - the
&lt;a href="http://github.com/ElSaico/automation-track-builder"&gt;Automation Track Builder&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;What&lt;/h2&gt;
&lt;p&gt;This is an auxiliary web application for &lt;a href="http://www.automationgame.com"&gt;Automation&lt;/a&gt;,
a “car company tycoon” game under development where you design cars and engines from scratch.&lt;br/&gt;
Currently, there are Multiplayer, Scenario and Sandbox modes available, and the finished version
will present a Campaign mode &lt;em&gt;a la&lt;/em&gt; Detroit.&lt;/p&gt;
&lt;p&gt;One of the car designer’s features is the possiblity of choosing a track and
setting a lap on it. There are two available from the start, and more can be created
and downloaded.&lt;br/&gt;
The process of track creation used to be somewhat cumbersome, involving manual
editing of Lua files and a lot of trial and error. This application was designed
to facilitate it - you can start from scratch (or import an existing track) and
edit everything visually.&lt;/p&gt;
&lt;p&gt;You can access it &lt;a href="http://uberwald-dev.net/automation-track-builder"&gt;here&lt;/a&gt;. Fellow
forumite 07CobaltGirl made a &lt;a href="http://automationgame.com/phpBB3/viewtopic.php?f=36&amp;amp;t=4179"&gt;tutorial&lt;/a&gt;
that helps learning its functionality.&lt;/p&gt;
&lt;h2&gt;How&lt;/h2&gt;
&lt;p&gt;This app was made possible thanks to several JavaScript libraries. In particular:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://angularjs.org"&gt;AngularJS&lt;/a&gt;, the main framework&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fabricjs.com"&gt;Fabric.js&lt;/a&gt;, for drawing the track preview&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oxyc.github.io/luaparse"&gt;luaparse&lt;/a&gt;, a JS parser for Lua source files - used to import existing track files&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/janl/mustache.js"&gt;mustache.js&lt;/a&gt;, a template system used to export the tracks to the Automation format&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not to mention libraries such as &lt;a href="http://gruntjs.com/"&gt;Grunt&lt;/a&gt; and &lt;a href="http://bower.io/"&gt;Bower&lt;/a&gt;,
which automate a significant chunk of the development process and make working with
JavaScript much easier.&lt;br/&gt;
With their aid, web applications are very viable choices for portable development
and smooth deployment.&lt;/p&gt;</summary><category term="web"></category><category term="angular.js"></category></entry><entry><title>Kiwi Krossing, day 3</title><link href="http://uberwald-dev.net/2014-04-07-kiwi-krossing-day-3.html" rel="alternate"></link><updated>2014-04-07T03:22:34-03:00</updated><author><name>Bruno Marques</name></author><id>tag:uberwald-dev.net,2014-04-07:2014-04-07-kiwi-krossing-day-3.html</id><summary type="html">&lt;p&gt;&lt;img alt="A preview of the game in Flash" src="http://uberwald-dev.net/images/kiwi-krossing-2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Now we got something. Still temporary sprites, but this time they point towards what the final game will be.&lt;/p&gt;
&lt;p&gt;The physics are still the same, though, which makes things weird.&lt;/p&gt;</summary><category term="gamedev"></category><category term="game design"></category><category term="haxe"></category><category term="haxeflixel"></category></entry><entry><title>Kiwi Krossing, day 2</title><link href="http://uberwald-dev.net/2014-04-07-kiwi-krossing-day-2.html" rel="alternate"></link><updated>2014-04-07T03:18:08-03:00</updated><author><name>Bruno Marques</name></author><id>tag:uberwald-dev.net,2014-04-07:2014-04-07-kiwi-krossing-day-2.html</id><summary type="html">&lt;p&gt;Some fun with HaxeFlixel physics resulted in this.&lt;/p&gt;
&lt;p&gt;Also, last concept before changing the whole thing to be about a kiwi &lt;del&gt;crossing&lt;/del&gt; krossing a river.&lt;/p&gt;
&lt;p&gt;
&lt;iframe allowfullscreen="true" frameborder="0" height="315" src="//www.youtube.com/embed/NbDD3bDpty8" width="560"&gt;&lt;/iframe&gt;
&lt;/p&gt;</summary><category term="gamedev"></category><category term="game design"></category><category term="haxe"></category><category term="haxeflixel"></category></entry><entry><title>How Kiwi Krossing started</title><link href="http://uberwald-dev.net/2014-04-07-how-kiwi-krossing-started.html" rel="alternate"></link><updated>2014-04-07T03:10:00-03:00</updated><author><name>Bruno Marques</name></author><id>tag:uberwald-dev.net,2014-04-07:2014-04-07-how-kiwi-krossing-started.html</id><summary type="html">&lt;p&gt;&lt;img alt="The map in the Ogmo editor" src="http://uberwald-dev.net/images/kiwi-krossing-1.png" /&gt;&lt;/p&gt;
&lt;p&gt;A map made in Ogmo, placeholder graphics and a mission: "go fetch stuff downwards in an enclosed space".&lt;/p&gt;
&lt;p&gt;That was before settling on the general theme, of course.&lt;/p&gt;</summary><category term="gamedev"></category><category term="game design"></category></entry></feed>